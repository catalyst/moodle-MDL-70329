{"version":3,"sources":["../../../src/local/filter/range.js"],"names":["filterType","filterSet","rootNode","setUpRangeUi","rangeListenner","filterRoot","querySelector","Selectors","filter","regions","range","addEventListener","context","placeholderone","placeholderOne","rangetype","placeholdertwo","placeholderTwo","Templates","render","then","rangeUi","js","replaceNodeContents","getFilterValueNode","fail","html","appendNodeContents","values","byName","parseInt","fields","join","value","rangeValue1","document","getElementById","rangeValue2","push","name","jointype","rawValues"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Range filter.\n *\n * @module     core/local/filter/range\n * @copyright  2021 Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Selectors from 'core/local/filter/selectors';\nimport Templates from 'core/templates';\nexport default class {\n    constructor(filterType, filterSet) {\n        this.filterType = filterType;\n        this.rootNode = filterSet;\n        this.setUpRangeUi();\n        this.rangeListenner();\n    }\n\n    /**\n     * Perform any tear-down for this filter type.\n     */\n    tearDown() {\n        // eslint-disable-line no-empty-function\n    }\n\n    /**\n     * Get the root node for this filter.\n     *\n     * @returns {HTMLElement}\n     */\n    get filterRoot() {\n        return this.rootNode.querySelector(Selectors.filter.byName(this.filterType));\n    }\n\n    /**\n     * Adds listenner on filter range region.\n     *\n     */\n    rangeListenner() {\n        this.filterRoot.querySelector(Selectors.filter.regions.range).addEventListener('change', () => {\n            const context = {\n                placeholderone: this.placeholderOne\n            };\n            if (this.rangetype === 2) {\n                context.placeholdertwo = this.placeholderTwo;\n            }\n            Templates.render('core/local/filter/range', context)\n            .then((rangeUi, js) => {\n                Templates.replaceNodeContents(this.getFilterValueNode(), rangeUi, js);\n                return;\n            }).fail();\n        });\n    }\n\n    /**\n     * Sets up base range UI.\n     *\n     */\n    setUpRangeUi() {\n        const context = {\n            placeholderone: this.placeholderOne,\n            placeholdertwo: this.placeholderTwo\n        };\n        Templates.render('core/filter_range', {})\n        .then((html, js) => {\n            Templates.appendNodeContents(Selectors.filter.regions.range, html, js);\n            return;\n        }).fail();\n        Templates.render('core/local/filter/range', context)\n        .then((rangeUi, js) => {\n            Templates.appendNodeContents(this.getFilterValueNode(), rangeUi, js);\n            return;\n        }).fail();\n    }\n\n    /**\n     * Get the HTMLElement which contains the value selector.\n     *\n     * @returns {HTMLElement}\n     */\n    getFilterValueNode() {\n        return this.filterRoot.querySelector(Selectors.filter.regions.values);\n    }\n\n    /**\n     * Get the placeholder for range value one.\n     *\n     * @return {String} String\n     */\n    get placeholderOne() {\n        return 'First range value';\n    }\n\n    /**\n     * Get the placeholder for range value two.\n     *\n     * @return {String} String\n     */\n    get placeholderTwo() {\n        return 'Second range value';\n    }\n\n    /**\n     * Get the name of this filter.\n     *\n     * @returns {String}\n     */\n    get name() {\n        return this.filterType;\n    }\n\n    /**\n     * Get the type of join specified.\n     *\n     * @returns {Number}\n     */\n    get jointype() {\n        return parseInt(this.filterRoot.querySelector(Selectors.filter.fields.join).value, 10);\n    }\n\n    get rangetype() {\n        return parseInt(this.filterRoot.querySelector(Selectors.filter.fields.range).value, 10);\n    }\n\n    /**\n     * Get the list of raw values for this filter type.\n     *\n     * @returns {Array}\n     */\n    get rawValues() {\n        const rangeValue1 = document.getElementById('rangeValue1').value;\n        const values = [rangeValue1];\n        if (this.rangetype === 2) {\n            const rangeValue2 = document.getElementById('rangeValue2').value;\n            values.push(rangeValue2);\n        }\n        return values;\n    }\n\n    /**\n     * Get the composed value for this filter.\n     *\n     * @returns {Object}\n     */\n    get filterValue() {\n        return {\n            name: this.name,\n            jointype: this.jointype,\n            rangetype: this.rangetype,\n            values: this.rawValues,\n        };\n    }\n}\n"],"file":"range.min.js"}