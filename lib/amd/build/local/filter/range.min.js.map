{"version":3,"sources":["../../../src/local/filter/range.js"],"names":["filterType","filterSet","rootNode","setUpRangeUi","context","Templates","render","then","rangeUi","js","replaceNodeContents","Selectors","filter","regions","values","fail","type","placeholderOne","placeholderone","placeholderTwo","placeholdertwo","filterRoot","querySelector","fields","range","addEventListener","rangetype","displayRange","html","rangeListenner","catch","byName","parseInt","join","value","rangeValue1","document","getElementById","rangeValue2","push","name","jointype","rawValues"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Range filter.\n *\n * @module     core/local/filter/range\n * @copyright  2021 Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Selectors from 'core/local/filter/selectors';\nimport Templates from 'core/templates';\n\nexport default class {\n    constructor(filterType, filterSet) {\n        this.filterType = filterType;\n        this.rootNode = filterSet;\n        this.setUpRangeUi('text');\n    }\n\n    /**\n     * Perform any tear-down for this filter type.\n     */\n    tearDown() {\n        // eslint-disable-line no-empty-function\n    }\n\n    /**\n     * Get the root node for this filter.\n     *\n     * @returns {HTMLElement}\n     */\n    get filterRoot() {\n        return this.rootNode.querySelector(Selectors.filter.byName(this.filterType));\n    }\n\n    /**\n     * Renders one or two input based on given context.\n     *\n     * @param {Object} context Context for mustache containing one or two placeholder.\n     */\n    async displayRange(context) {\n        Templates.render('core/local/filter/range', context)\n        .then((rangeUi, js) => {\n            Templates.replaceNodeContents(Selectors.filter.regions.values, rangeUi, js);\n            return;\n        }).fail();\n    }\n\n    /**\n     * Adds listenner on filter range region.\n     *\n     * @param {string} type Type of input desired.\n     */\n    async rangeListenner(type) {\n        const placeholderone = await this.placeholderOne;\n        const placeholdertwo = await this.placeholderTwo;\n        this.filterRoot.querySelector(Selectors.filter.fields.range).addEventListener('change', () => {\n            const context = {\n                placeholderone: placeholderone,\n                type: type\n            };\n            if (this.rangetype === 2) {\n                context.placeholdertwo = placeholdertwo;\n            }\n            this.displayRange(context);\n        });\n    }\n\n    /**\n     * Sets up base range UI.\n     *\n     * @param {string} type Type of input desired.\n     */\n    async setUpRangeUi(type) {\n        const placeholderone = await this.placeholderOne;\n        const placeholdertwo = await this.placeholderTwo;\n        const context = {\n            placeholderone: placeholderone,\n            placeholdertwo: placeholdertwo,\n            type: type\n        };\n        Templates.render('core/filter_range', {})\n        .then((html, js) => {\n            Templates.replaceNodeContents(Selectors.filter.regions.range, html, js);\n            this.displayRange(context)\n            .then(() => {\n                this.rangeListenner(type);\n                return;\n            }).catch();\n            return;\n        })\n        .catch();\n    }\n\n    /**\n     * Get the placeholder for range value one.\n     *\n     * @return {String} String\n     */\n    get placeholderOne() {\n        return 'First range value';\n    }\n\n    /**\n     * Get the placeholder for range value two.\n     *\n     * @return {String} String\n     */\n    get placeholderTwo() {\n        return 'Second range value';\n    }\n\n    /**\n     * Get the name of this filter.\n     *\n     * @returns {String}\n     */\n    get name() {\n        return this.filterType;\n    }\n\n    /**\n     * Get the type of join specified.\n     *\n     * @returns {Number}\n     */\n    get jointype() {\n        return parseInt(this.filterRoot.querySelector(Selectors.filter.fields.join).value, 10);\n    }\n\n    /**\n     * Get the type of range specified.\n     *\n     * @returns {Number}\n     */\n    get rangetype() {\n        return parseInt(this.filterRoot.querySelector(Selectors.filter.fields.range).value, 10);\n    }\n\n    /**\n     * Get the list of raw values for this filter type.\n     *\n     * @returns {Array}\n     */\n    get rawValues() {\n        const rangeValue1 = document.getElementById('rangeValue1').value;\n        const values = [rangeValue1];\n        if (this.rangetype === 2) {\n            const rangeValue2 = document.getElementById('rangeValue2').value;\n            values.push(rangeValue2);\n        }\n        return values;\n    }\n\n    /**\n     * Get the composed value for this filter.\n     *\n     * @returns {Object}\n     */\n    get filterValue() {\n        return {\n            name: this.name,\n            jointype: this.jointype,\n            rangetype: this.rangetype,\n            values: this.rawValues,\n        };\n    }\n}\n"],"file":"range.min.js"}