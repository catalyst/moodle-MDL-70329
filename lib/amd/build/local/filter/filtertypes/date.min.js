define("core/local/filter/filtertypes/date",["exports","core/local/filter/range"],(function(_exports,_range){var obj;
/**
   * Date filter.
   *
   * @module     core/local/filter/filtertypes/date
   * @copyright  2022 Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_range=(obj=_range)&&obj.__esModule?obj:{default:obj};class _default extends _range.default{constructor(filterType,filterSet,initialValues,filterRange){let dateStrings;super(filterType,filterSet,initialValues,filterRange),void 0!==this.initialValues&&(dateStrings=this.timeStampToDate()),super.setUpRangeUi("date",dateStrings)}timeStampToDate(){const dateStrings=[];return Object.values(this.initialValues).forEach((timestamp=>{const date=new Date(1e3*timestamp),string=date.getFullYear()+"-"+("0"+(date.getMonth()+1)).slice(-2)+"-"+("0"+(date.getDate()+1)).slice(-2);dateStrings.push(string)})),dateStrings}get datesFromRaw(){const timeStamps=[new Date(this.rawValues[0]).getTime()/1e3];if(""!==this.rawValues[1]&&void 0!==this.rawValues[1]){const dateTwo=new Date(this.rawValues[1]);timeStamps.push(dateTwo.getTime()/1e3)}return timeStamps}get filterValue(){return{name:this.name,jointype:this.jointype,rangetype:this.rangetype,values:this.datesFromRaw}}}return _exports.default=_default,_exports.default}));

//# sourceMappingURL=date.min.js.map