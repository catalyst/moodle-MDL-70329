{"version":3,"sources":["../../../../src/local/filter/filtertypes/date.js"],"names":["filterType","filterSet","dateOne","Date","rawValues","timeStamps","getTime","dateTwo","push","name","jointype","rangetype","values","datesFromRaw","Range"],"mappings":"gLAsBA,uD,++DAGI,WAAYA,CAAZ,CAAwBC,CAAxB,CAAmC,iBAC/B,cAAMD,CAAN,CAAkBC,CAAlB,EACA,gDAAmB,MAAnB,EAF+B,QAGlC,C,2CAOkB,IACTC,CAAAA,CAAO,CAAG,GAAIC,CAAAA,IAAJ,CAAS,KAAKC,SAAL,CAAe,CAAf,CAAT,CADD,CAETC,CAAU,CAAG,CAACH,CAAO,CAACI,OAAR,GAAoB,GAArB,CAFJ,CAGf,GAA0B,EAAtB,QAAKF,SAAL,CAAe,CAAf,GAA4B,KAAKA,SAAL,CAAe,CAAf,UAAhC,CAAiE,CAC7D,GAAMG,CAAAA,CAAO,CAAG,GAAIJ,CAAAA,IAAJ,CAAS,KAAKC,SAAL,CAAe,CAAf,CAAT,CAAhB,CACAC,CAAU,CAACG,IAAX,CAAgBD,CAAO,CAACD,OAAR,GAAoB,GAApC,CACH,CACD,MAAOD,CAAAA,CACV,C,uCAOiB,CACd,MAAO,CACHI,IAAI,CAAE,KAAKA,IADR,CAEHC,QAAQ,CAAE,KAAKA,QAFZ,CAGHC,SAAS,CAAE,KAAKA,SAHb,CAIHC,MAAM,CAAE,KAAKC,YAJV,CAMV,C,cAjCyBC,S","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Date filter.\n *\n * @module     core/local/filter/filtertypes/date\n * @copyright  2022 Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Range from 'core/local/filter/range';\n\n export default class extends Range {\n    constructor(filterType, filterSet) {\n        super(filterType, filterSet);\n        super.setUpRangeUi('date');\n    }\n\n    /**\n     * Get unix timestamps from provided raw dates.\n     *\n     * @return {Array}\n     */\n    get datesFromRaw() {\n        const dateOne = new Date(this.rawValues[0]);\n        const timeStamps = [dateOne.getTime() / 1000];\n        if (this.rawValues[1] !== '' && this.rawValues[1] !== undefined) {\n            const dateTwo = new Date(this.rawValues[1]);\n            timeStamps.push(dateTwo.getTime() / 1000);\n        }\n        return timeStamps;\n    }\n\n    /**\n     * Get the composed value for this filter.\n     *\n     * @returns {Object}\n     */\n    get filterValue() {\n        return {\n            name: this.name,\n            jointype: this.jointype,\n            rangetype: this.rangetype,\n            values: this.datesFromRaw,\n        };\n    }\n }\n"],"file":"date.min.js"}