{"version":3,"sources":["../../../../src/local/filter/filtertypes/date.js"],"names":["filterType","filterSet","initialValues","filterRange","dateStrings","timeStampToDate","Object","values","forEach","timestamp","date","Date","year","getFullYear","month","getMonth","slice","day","getDate","push","dateOne","rawValues","timeStamps","getTime","dateTwo","name","jointype","rangetype","datesFromRaw","Range"],"mappings":"gLAsBA,uD,++DAGI,WAAYA,CAAZ,CAAwBC,CAAxB,CAAmCC,CAAnC,CAAkDC,CAAlD,CAA+D,iBAC3D,cAAMH,CAAN,CAAkBC,CAAlB,CAA6BC,CAA7B,CAA4CC,CAA5C,EACA,GAAIC,CAAAA,CAAJ,CAEA,GAAI,EAAKF,aAAL,SAAJ,CAAsC,CAClCE,CAAW,CAAG,EAAKC,eAAL,EACjB,CACD,gDAAmB,MAAnB,CAA2BD,CAA3B,EAP2D,QAQ9D,C,4DAOiB,CACd,GAAMA,CAAAA,CAAW,CAAG,EAApB,CACAE,MAAM,CAACC,MAAP,CAAc,KAAKL,aAAnB,EAAkCM,OAAlC,CAA0C,SAACC,CAAD,CAAe,IAC/CC,CAAAA,CAAI,CAAG,GAAIC,CAAAA,IAAJ,CAAqB,GAAZ,CAAAF,CAAT,CADwC,CAE/CG,CAAI,CAAGF,CAAI,CAACG,WAAL,EAFwC,CAG/CC,CAAK,CAAG,CAAC,KAAOJ,CAAI,CAACK,QAAL,GAAkB,CAAzB,CAAD,EAA8BC,KAA9B,CAAoC,CAAC,CAArC,CAHuC,CAI/CC,CAAG,CAAG,CAAC,KAAOP,CAAI,CAACQ,OAAL,GAAiB,CAAxB,CAAD,EAA6BF,KAA7B,CAAmC,CAAC,CAApC,CAJyC,CAMrDZ,CAAW,CAACe,IAAZ,CADeP,CAAI,CAAG,GAAP,CAAaE,CAAb,CAAqB,GAArB,CAA2BG,CAC1C,CACH,CAPD,EAQA,MAAOb,CAAAA,CACV,C,wCAMkB,IACTgB,CAAAA,CAAO,CAAG,GAAIT,CAAAA,IAAJ,CAAS,KAAKU,SAAL,CAAe,CAAf,CAAT,CADD,CAETC,CAAU,CAAG,CAACF,CAAO,CAACG,OAAR,GAAoB,GAArB,CAFJ,CAGf,GAA0B,EAAtB,QAAKF,SAAL,CAAe,CAAf,GAA4B,KAAKA,SAAL,CAAe,CAAf,UAAhC,CAAiE,CAC7D,GAAMG,CAAAA,CAAO,CAAG,GAAIb,CAAAA,IAAJ,CAAS,KAAKU,SAAL,CAAe,CAAf,CAAT,CAAhB,CACAC,CAAU,CAACH,IAAX,CAAgBK,CAAO,CAACD,OAAR,GAAoB,GAApC,CACH,CACD,MAAOD,CAAAA,CACV,C,uCAOiB,CACd,MAAO,CACHG,IAAI,CAAE,KAAKA,IADR,CAEHC,QAAQ,CAAE,KAAKA,QAFZ,CAGHC,SAAS,CAAE,KAAKA,SAHb,CAIHpB,MAAM,CAAE,KAAKqB,YAJV,CAMV,C,cAvDyBC,S","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Date filter.\n *\n * @module     core/local/filter/filtertypes/date\n * @copyright  2022 Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Range from 'core/local/filter/range';\n\n export default class extends Range {\n    constructor(filterType, filterSet, initialValues, filterRange) {\n        super(filterType, filterSet, initialValues, filterRange);\n        let dateStrings;\n        // If any url date values is loaded we need to transfer timestamps to dates.\n        if (this.initialValues !== undefined) {\n            dateStrings = this.timeStampToDate();\n        }\n        super.setUpRangeUi('date', dateStrings);\n    }\n\n    /**\n     * Get unix timestamps from provided raw dates.\n     *\n     * @return {Array} dateStrings Array with formated date strings MM/DD/YYYY.\n     */\n    timeStampToDate() {\n        const dateStrings = [];\n        Object.values(this.initialValues).forEach((timestamp) => {\n            const date = new Date(timestamp * 1000);\n            const year = date.getFullYear();\n            const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n            const day = (\"0\" + (date.getDate() + 1)).slice(-2);\n            const string = year + '-' + month + '-' + day;\n            dateStrings.push(string);\n        });\n        return dateStrings;\n    }\n    /**\n     * Get unix timestamps from provided raw dates.\n     *\n     * @return {Array}\n     */\n    get datesFromRaw() {\n        const dateOne = new Date(this.rawValues[0]);\n        const timeStamps = [dateOne.getTime() / 1000];\n        if (this.rawValues[1] !== '' && this.rawValues[1] !== undefined) {\n            const dateTwo = new Date(this.rawValues[1]);\n            timeStamps.push(dateTwo.getTime() / 1000);\n        }\n        return timeStamps;\n    }\n\n    /**\n     * Get the composed value for this filter.\n     *\n     * @returns {Object}\n     */\n    get filterValue() {\n        return {\n            name: this.name,\n            jointype: this.jointype,\n            rangetype: this.rangetype,\n            values: this.datesFromRaw,\n        };\n    }\n }\n"],"file":"date.min.js"}