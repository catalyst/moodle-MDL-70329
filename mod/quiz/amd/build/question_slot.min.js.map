{"version":3,"sources":["../src/question_slot.js"],"names":["SELECTORS","setSelectors","slotId","slotIdClass","VERSION_LIST","SLOT_ID","ajax","request","Ajax","call","done","location","reload","fail","Notification","exception","changeVersion","selectElement","document","querySelector","addEventListener","versionIdSelected","parseInt","value","methodname","args","slotid","newversionid","init"],"mappings":"yKAwBA,OACA,O,sDAQIA,CAAAA,CAAS,CAAG,E,CAQVC,CAAY,CAAG,SAACC,CAAD,CAAY,CAC7B,GAAIC,CAAAA,CAAW,CAAG,EAAlB,CACA,GAAID,CAAJ,CAAY,CACRC,CAAW,CAAG,IAAMD,CACvB,CAEDF,CAAS,CAAG,CACRI,YAAY,CAAE,WAAaD,CADnB,CAERE,OAAO,CAAE,yBAA2BF,CAF5B,CAIf,C,CAQKG,CAAI,CAAG,SAACC,CAAD,CAAa,CACtB,MAAOC,WAAKC,IAAL,CAAUF,CAAV,EAAmB,CAAnB,EAAsBG,IAAtB,CAA2B,UAAW,CACzCC,QAAQ,CAACC,MAAT,EACH,CAFM,EAEJC,IAFI,CAECC,UAAaC,SAFd,CAGV,C,CAOKC,CAAa,CAAG,SAACd,CAAD,CAAY,CAC9B,GAAMe,CAAAA,CAAa,CAAGC,QAAQ,CAACC,aAAT,CAAuBnB,CAAS,CAACI,YAAjC,CAAtB,CACAa,CAAa,CAACG,gBAAd,CAA+B,QAA/B,CAAyC,UAAM,CAC3C,GAAIC,CAAAA,CAAiB,CAAGC,QAAQ,CAACL,CAAa,CAACM,KAAf,CAAhC,CACAtB,CAAY,CAACC,CAAD,CAAZ,CAQAI,CAAI,CAPU,CAAC,CACXkB,UAAU,CAAE,+BADD,CAEXC,IAAI,CAAE,CACFC,MAAM,CAAExB,CADN,CAEFyB,YAAY,CAAEN,CAFZ,CAFK,CAAD,CAOV,CACP,CAXD,CAYH,C,QAOmB,QAAPO,CAAAA,IAAO,CAAC1B,CAAD,CAAY,CAC5BD,CAAY,CAACC,CAAD,CAAZ,CACAc,CAAa,CAACd,CAAD,CAChB,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Render the question slot template for each question in the quiz edit view.\n *\n * @package    mod_quiz\n * @copyright  2021 Catalyst IT Australia Pty Ltd\n * @author     Guillermo Gomez Arias <guillermogomez@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\n/**\n *\n * Initialize CSS selectors.\n *\n * @type {object}\n */\nlet SELECTORS = {};\n\n/**\n * Set CSS selector.\n * Add slot id to class if is not null.\n *\n * @param {int} slotId The slot id.\n */\nconst setSelectors = (slotId) => {\n    let slotIdClass = '';\n    if (slotId) {\n        slotIdClass = '-' + slotId;\n    }\n\n    SELECTORS = {\n        VERSION_LIST: '#version' + slotIdClass,\n        SLOT_ID: '#mod-indent-outer-slot' + slotIdClass,\n    };\n};\n\n/**\n * Helper ajax function.\n *\n * @param {object} request The request to be made.\n * @returns {Promise}\n */\nconst ajax = (request) => {\n    return Ajax.call(request)[0].done(function() {\n        location.reload();\n    }).fail(Notification.exception);\n};\n\n/**\n * Replace the container with a new version.\n *\n * @param {int} slotId\n */\nconst changeVersion = (slotId) => {\n    const selectElement = document.querySelector(SELECTORS.VERSION_LIST);\n    selectElement.addEventListener('change', () => {\n        let versionIdSelected = parseInt(selectElement.value);\n        setSelectors(slotId);\n        let request = [{\n            methodname: 'mod_quiz_set_question_version',\n            args: {\n                slotid: slotId,\n                newversionid: versionIdSelected,\n            }\n        }];\n        ajax(request);\n    });\n};\n\n/**\n * Entrypoint of the js.\n *\n * @param {int} slotId\n */\nexport const init = (slotId) => {\n    setSelectors(slotId);\n    changeVersion(slotId);\n};\n"],"file":"question_slot.min.js"}