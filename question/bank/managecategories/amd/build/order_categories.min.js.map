{"version":3,"sources":["../src/order_categories.js"],"names":["SortableList","moveHandlerSelector","setupSortableLists","contextid","on","EVENTS","DROP","evt","stopPropagation","categoryListElements","parent","href","currentTarget","getElementsByTagName","queryString","substr","search","params","URLSearchParams","cat","get","oldContextId","oldCat","remove","newOrder","getNewOrder","newCatOrder","JSON","stringify","destinationContext","destination","split","origin","originContext","originCategory","setCatOrder","then","getCategoriesFragment","done","html","js","Templates","replaceNodeContents","catch","error","Notification","addNotification","message","type","document","getElementsByClassName","scrollIntoView","url","location","Fragment","loadFragment","promise","Promise","resolve","reject","response","Ajax","call","methodname","args","neworder","origincategory","destinationcontext","origincontext","fail","exception","resp","success","oldCtxCat","destinationCtx","i","length","listItems","querySelectorAll","listOrder","j","categories","push","filter","ctxId","categoryParentListenner","categorycontainer","getElementById","addEventListener","e","target","parentNode","classList","contains","data","dataset","tomove","tocategory","init"],"mappings":"iQAyBA,OACA,OACA,OACA,OACA,OACA,O,mDAEA,GAAIA,UAAJ,CACI,gBADJ,CAEI,CACIC,mBAAmB,CAAE,kCADzB,CAFJ,E,GAYMC,CAAAA,CAAkB,CAAG,SAACC,CAAD,CAAe,CACtC,cAAE,YAAF,EAAgBC,EAAhB,CAAmBJ,UAAaK,MAAb,CAAoBC,IAAvC,CAA6C,SAACC,CAAD,CAAS,CAClDA,CAAG,CAACC,eAAJ,GADkD,GAE5CC,CAAAA,CAAoB,CAAG,cAAE,YAAF,EAAgBC,MAAhB,EAFqB,CAI5CC,CAAI,CAAGJ,CAAG,CAACK,aAAJ,CAAkBC,oBAAlB,CAAuC,GAAvC,EAA4C,CAA5C,EAA+CF,IAJV,CAM5CG,CAAW,CAAGH,CAAI,CAACI,MAAL,CAAYJ,CAAI,CAACK,MAAL,CAAY,KAAZ,CAAZ,CAN8B,CAO5CC,CAAM,CAAG,GAAIC,CAAAA,eAAJ,CAAoBJ,CAApB,CAPmC,CAQ5CK,CAAG,CAAGF,CAAM,CAACG,GAAP,CAAW,KAAX,CARsC,CAU5CC,CAAY,CAAGF,CAAG,CAACJ,MAAJ,CAAWI,CAAG,CAACH,MAAJ,CAAW,GAAX,EAAkB,CAA7B,CAV6B,CAW5CM,CAAM,CAAGH,CAAG,CAACJ,MAAJ,CAAW,CAAX,CAAcI,CAAG,CAACH,MAAJ,CAAW,GAAX,CAAd,CAXmC,CAalD,cAAE,qBAAF,EAAyBO,MAAzB,GAbkD,GAc5CC,CAAAA,CAAQ,CAAGC,CAAW,CAAChB,CAAD,CAAuBY,CAAvB,CAAqCC,CAArC,CAdsB,CAgB5CI,CAAW,CAAGC,IAAI,CAACC,SAAL,CAAeJ,CAAQ,CAAC,CAAD,CAAvB,CAhB8B,CAiB9CK,CAAkB,CAAGR,CAjByB,CAkBlD,GAAIG,CAAQ,CAAC,CAAD,CAAR,SAAJ,CAA+B,CAC3B,GAAMM,CAAAA,CAAW,CAAGN,CAAQ,CAAC,CAAD,CAAR,CAAYO,KAAZ,CAAkB,GAAlB,CAApB,CACAF,CAAkB,CAAGC,CAAW,CAAC,CAAD,CACnC,CArBiD,GAsB5CE,CAAAA,CAAM,CAAGR,CAAQ,CAAC,CAAD,CAAR,CAAYO,KAAZ,CAAkB,GAAlB,CAtBmC,CAuB5CE,CAAa,CAAGD,CAAM,CAAC,CAAD,CAvBsB,CAwB5CE,CAAc,CAAGF,CAAM,CAAC,CAAD,CAxBqB,CAyBlDG,CAAW,CAACT,CAAD,CAAcQ,CAAd,CAA8BL,CAA9B,CAAkDI,CAAlD,CAAX,CACCG,IADD,CACM,UAAM,CACR,MAAOC,CAAAA,CAAqB,CAAClC,CAAD,CAArB,CAAiCmC,IAAjC,CAAsC,SAACC,CAAD,CAAOC,CAAP,CAAc,CACvDC,UAAUC,mBAAV,CAA8B,qBAA9B,CAAqDH,CAArD,CAA2DC,CAA3D,CACH,CAFM,CAGV,CALD,EAMCG,KAND,CAMO,SAACC,CAAD,CAAW,CACdC,UAAaC,eAAb,CAA6B,CACzBC,OAAO,CAAEH,CAAK,CAACA,KADU,CAEzBI,IAAI,CAAE,OAFmB,CAA7B,EAIA,MAAOX,CAAAA,CAAqB,CAAClC,CAAD,CAArB,CAAiCmC,IAAjC,CAAsC,SAACC,CAAD,CAAOC,CAAP,CAAc,CACvDS,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDC,cAAnD,GACAV,UAAUC,mBAAV,CAA8B,qBAA9B,CAAqDH,CAArD,CAA2DC,CAA3D,CACH,CAHM,CAIV,CAfD,CAgBH,CAzCD,CA0CH,C,CAQKH,CAAqB,CAAG,SAAClC,CAAD,CAAe,CACzC,GAAIc,CAAAA,CAAM,CAAG,CACTmC,GAAG,CAAEC,QAAQ,CAAC1C,IADL,CAAb,CAGA,MAAO2C,WAASC,YAAT,CAAsB,wBAAtB,CAAgD,oBAAhD,CAAsEpD,CAAtE,CAAiFc,CAAjF,CACV,C,CAWKkB,CAAW,CAAG,SAACT,CAAD,CAAcQ,CAAd,CAA8BL,CAA9B,CAAkDI,CAAlD,CAAoE,CACpF,GAAMuB,CAAAA,CAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY,SAACC,CAAD,CAAUC,CAAV,CAAqB,CAC7C,GAAMC,CAAAA,CAAQ,CAAGC,UAAKC,IAAL,CAAU,CAAC,CACxBC,UAAU,CAAE,8CADY,CAExBC,IAAI,CAAE,CACFC,QAAQ,CAAEvC,CADR,CAEFwC,cAAc,CAAEhC,CAFd,CAGFiC,kBAAkB,CAAEtC,CAHlB,CAIFuC,aAAa,CAAEnC,CAJb,CAFkB,CAQxBoC,IAAI,CAAExB,UAAayB,SARK,CAAD,CAAV,CAAjB,CAUAV,CAAQ,CAAC,CAAD,CAAR,CAAYxB,IAAZ,CAAiB,SAACmC,CAAD,CAAU,CACvB,GAAI,KAAAA,CAAI,CAACC,OAAT,CAA2B,CACvBd,CAAO,EACV,CAFD,IAEO,CACHC,CAAM,CAACY,CAAD,CACT,CAEJ,CAPD,EAOG5B,KAPH,CAOS,UAAM,CAEd,CATD,CAUH,CArBe,CAAhB,CAsBA,MAAOa,CAAAA,CACV,C,CAUK/B,CAAW,CAAG,SAAChB,CAAD,CAAuBY,CAAvB,CAAqCC,CAArC,CAAgD,CAIhE,OAHMmD,CAAAA,CAAS,CAAGnD,CAAM,CAAG,GAAT,CAAeD,CAGjC,CAFMK,CAAW,CAAG,EAEpB,CADIgD,CAAc,CAAG,EACrB,CAASC,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGlE,CAAoB,CAACmE,MAAzC,CAAiDD,CAAC,EAAlD,CAAsD,CAGlD,OAFME,CAAAA,CAAS,CAAGpE,CAAoB,CAACkE,CAAD,CAApB,CAAwBG,gBAAxB,CAAyC,cAAzC,CAElB,CADMC,CAAS,CAAG,EAClB,CAASC,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,CAAS,CAACD,MAA9B,CAAsCI,CAAC,EAAvC,CAA2C,IAEjCrE,CAAAA,CAAI,CAAGkE,CAAS,CAACG,CAAD,CAAT,CAAanE,oBAAb,CAAkC,GAAlC,EAAuC,CAAvC,EAA0CF,IAFhB,CAGjCG,CAAW,CAAGH,CAAI,CAACI,MAAL,CAAYJ,CAAI,CAACK,MAAL,CAAY,KAAZ,CAAZ,CAHmB,CAIjCC,CAAM,CAAG,GAAIC,CAAAA,eAAJ,CAAoBJ,CAApB,CAJwB,CAMjCmE,CAAU,CAAGhE,CAAM,CAACG,GAAP,CAAW,KAAX,CANoB,CAOvC2D,CAAS,CAACC,CAAD,CAAT,CAAeC,CAAf,CACA,GAAIA,CAAU,GAAKR,CAAnB,CAA8B,CAC1BC,CAAc,CAACQ,IAAf,CAAoBH,CAApB,CACH,CACJ,CAEDrD,CAAW,CAACiD,CAAD,CAAX,CAAiBI,CACpB,CACDL,CAAc,CAAGA,CAAc,CAAC,CAAD,CAA/B,CACAA,CAAc,CAAGA,CAAc,CAACS,MAAf,CAAsB,SAACC,CAAD,QAAWA,CAAAA,CAAK,CAACrD,KAAN,CAAY,GAAZ,EAAiB,CAAjB,GAAuBV,CAAlC,CAAtB,CAAjB,CACA,MAAO,CAACK,CAAD,CAAcgD,CAAc,CAAC,CAAD,CAA5B,CAAiCD,CAAjC,CACV,C,CAOKY,CAAuB,CAAG,SAAClF,CAAD,CAAe,CAC3C,GAAMmF,CAAAA,CAAiB,CAAGrC,QAAQ,CAACsC,cAAT,CAAwB,oBAAxB,CAA1B,CACA,GAAID,CAAJ,CAAuB,CACnBA,CAAiB,CAACE,gBAAlB,CAAmC,OAAnC,CAA4C,SAACC,CAAD,CAAO,CAC/C,GAAIA,CAAC,CAACC,MAAF,CAASC,UAAT,CAAoBC,SAApB,CAA8BC,QAA9B,CAAuC,aAAvC,CAAJ,CAA2D,IACjDC,CAAAA,CAAI,CAAGL,CAAC,CAACC,MAAF,CAASC,UAAT,CAAoBI,OADsB,CAEjDnC,CAAQ,CAAGC,UAAKC,IAAL,CAAU,CAAC,CACxBC,UAAU,CAAE,8CADY,CAExBC,IAAI,CAAE,CACFE,cAAc,CAAE4B,CAAI,CAACE,MADnB,CAEFC,UAAU,CAAEH,CAAI,CAACG,UAFf,CAFkB,CAMxB5B,IAAI,CAAExB,UAAayB,SANK,CAAD,CAAV,CAFsC,CAUvDV,CAAQ,CAAC,CAAD,CAAR,CAAYxB,IAAZ,CAAiB,UAAM,CACnBC,CAAqB,CAAClC,CAAD,CAArB,CAAiCmC,IAAjC,CAAsC,SAACC,CAAD,CAAOC,CAAP,CAAc,CAChDC,UAAUC,mBAAV,CAA8B,qBAA9B,CAAqDH,CAArD,CAA2DC,CAA3D,CACH,CAFD,CAIH,CALD,EAKGG,KALH,CAKS,UAAM,CAEd,CAPD,CAQH,CACJ,CApBD,CAqBH,CACJ,C,QAEmB,QAAPuD,CAAAA,IAAO,CAAC/F,CAAD,CAAe,CAC/BkF,CAAuB,CAAClF,CAAD,CAAvB,CACAD,CAAkB,CAACC,CAAD,CACrB,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module handling ordering of categories.\n *\n * @module     qbank_managecategories\n * @copyright  2021 Catalyst IT Australia Pty Ltd\n * @author     Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n */\n\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport Fragment from 'core/fragment';\nimport Notification from 'core/notification';\nimport SortableList from 'core/sortable_list';\nimport Templates from 'core/templates';\n\nnew SortableList(\n    '.category_list',\n    {\n        moveHandlerSelector: '.list_item [data-drag-type=move]',\n    }\n);\n\n/**\n * Sets up sortable list in the column sort order page.\n *\n * @param {number} contextid Context id for fragment.\n */\nconst setupSortableLists = (contextid) => {\n    $('.list_item').on(SortableList.EVENTS.DROP, (evt) => {\n        evt.stopPropagation();\n        const categoryListElements = $('.list_item').parent();\n        // Get moved list item href URL.\n        const href = evt.currentTarget.getElementsByTagName('a')[0].href;\n        // Get query string for that URL.\n        const queryString = href.substr(href.search('\\\\?'));\n        const params = new URLSearchParams(queryString);\n        const cat = params.get('cat');\n        // Get old context and category id.\n        const oldContextId = cat.substr(cat.search(',') + 1);\n        const oldCat = cat.substr(0, cat.search(','));\n        // Remove proxy created by sortable list.\n        $('li.list_item[style]').remove();\n        const newOrder = getNewOrder(categoryListElements, oldContextId, oldCat);\n        // Call external function.\n        const newCatOrder = JSON.stringify(newOrder[0]);\n        let destinationContext = oldContextId;\n        if (newOrder[1] !== undefined) {\n            const destination = newOrder[1].split(',');\n            destinationContext = destination[1];\n        }\n        const origin = newOrder[2].split(',');\n        const originContext = origin[1];\n        const originCategory = origin[0];\n        setCatOrder(newCatOrder, originCategory, destinationContext, originContext)\n        .then(() => {\n            return getCategoriesFragment(contextid).done((html, js) => {\n                Templates.replaceNodeContents('#categoriesrendered', html, js);\n            });\n        })\n        .catch((error) => {\n            Notification.addNotification({\n                message: error.error,\n                type: 'error'\n            });\n            return getCategoriesFragment(contextid).done((html, js) => {\n                document.getElementsByClassName('alert-danger')[0].scrollIntoView();\n                Templates.replaceNodeContents('#categoriesrendered', html, js);\n            });\n        });\n    });\n};\n\n/**\n * Call category_rendering fragment.\n *\n * @param {int} contextid String containing new ordered categories.\n * @returns {Promise}\n */\nconst getCategoriesFragment = (contextid) => {\n    let params = {\n        url: location.href,\n    };\n    return Fragment.loadFragment('qbank_managecategories', 'category_rendering', contextid, params);\n};\n\n/**\n * Call external function update_category_order - inserts the updated column in the question_categories table.\n *\n * @param {string} newCatOrder String containing new ordered categories.\n * @param {number} originCategory Category which was dragged.\n * @param {number} destinationContext Context where category was dropped.\n * @param {number} originContext Context from which the category was dragged.\n * @returns {Promise}\n */\nconst setCatOrder = (newCatOrder, originCategory, destinationContext, originContext) => {\n    const promise = new Promise((resolve, reject) => {\n        const response = Ajax.call([{\n            methodname: 'qbank_managecategories_update_category_order',\n            args: {\n                neworder: newCatOrder,\n                origincategory: originCategory,\n                destinationcontext: destinationContext,\n                origincontext: originContext,\n            },\n            fail: Notification.exception\n        }]);\n        response[0].then((resp) => {\n            if (resp.success === true) {\n                resolve();\n            } else {\n                reject(resp);\n            }\n            return;\n        }).catch(() => {\n            return;\n        });\n    });\n    return promise;\n};\n\n/**\n * Retrieving the order on EVENT.DROP, also gets new parameter.\n *\n * @param {JQuery<HTMLElement>} categoryListElements List of HTML element to parse.\n * @param {number} oldContextId Old context id to change.\n * @param {number} oldCat Old category.\n * @returns {array}\n */\nconst getNewOrder = (categoryListElements, oldContextId, oldCat) => {\n    const oldCtxCat = oldCat + ',' + oldContextId;\n    const newCatOrder = [];\n    let destinationCtx = [];\n    for (let i = 0; i < categoryListElements.length; i++) {\n        const listItems = categoryListElements[i].querySelectorAll('li.list_item');\n        const listOrder = [];\n        for (let j = 0; j < listItems.length; j++) {\n            // Get href parameters.\n            const href = listItems[j].getElementsByTagName('a')[0].href;\n            const queryString = href.substr(href.search('\\\\?'));\n            const params = new URLSearchParams(queryString);\n            // Parameters.\n            const categories = params.get('cat');\n            listOrder[j] = categories;\n            if (categories === oldCtxCat) {\n                destinationCtx.push(listOrder);\n            }\n        }\n        // New category order.\n        newCatOrder[i] = listOrder;\n    }\n    destinationCtx = destinationCtx[0];\n    destinationCtx = destinationCtx.filter((ctxId) => ctxId.split(',')[1] != oldContextId);\n    return [newCatOrder, destinationCtx[0], oldCtxCat];\n};\n\n/**\n * Method to add listenner on category arrow - descendants.\n *\n * @param {number} contextid Context id for fragment.\n */\nconst categoryParentListenner = (contextid) => {\n    const categorycontainer = document.getElementById('categoriesrendered');\n    if (categorycontainer) {\n        categorycontainer.addEventListener('click', (e) => {\n            if (e.target.parentNode.classList.contains('action-icon')) {\n                const data = e.target.parentNode.dataset;\n                const response = Ajax.call([{\n                    methodname: 'qbank_managecategories_update_category_order',\n                    args: {\n                        origincategory: data.tomove,\n                        tocategory: data.tocategory,\n                    },\n                    fail: Notification.exception\n                }]);\n                response[0].then(() => {\n                    getCategoriesFragment(contextid).done((html, js) => {\n                        Templates.replaceNodeContents('#categoriesrendered', html, js);\n                    });\n                    return;\n                }).catch(() => {\n                    return;\n                });\n            }\n        });\n    }\n};\n\nexport const init = (contextid) => {\n    categoryParentListenner(contextid);\n    setupSortableLists(contextid);\n};\n"],"file":"order_categories.min.js"}