{"version":3,"sources":["../src/order_categories.js"],"names":["OrderCategories","SortableList","moveHandlerSelector","on","EVENTS","DROP","evt","stopPropagation","categoryListElements","parent","href","currentTarget","getElementsByTagName","queryString","substr","search","params","URLSearchParams","cat","get","oldContextId","oldCat","remove","newOrder","getNewOrder","newCatOrder","JSON","stringify","destination","split","origin","destinationContext","originContext","originCategory","setCatOrder","then","location","reload","catch","promise","Promise","resolve","reject","response","Ajax","call","methodname","args","neworder","origincategory","destinationcontext","origincontext","fail","Notification","exception","resp","parse","oldCtxCat","destinationCtx","i","length","listItems","querySelectorAll","listOrder","j","contextId","push","filter","ctxId","setEventListenner","checkbox","document","getElementsByName","checkboxform","getElementById","addEventListener","e","preventDefault","submit","init","orderCat","setupSortableLists"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module handling ordering of categories.\n *\n * @package    qbank_managecategories\n * @copyright  2021 Catalyst IT Australia Pty Ltd\n * @author     Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport SortableList from 'core/sortable_list';\nimport $ from 'jquery';\n\nclass OrderCategories {\n    /**\n     * Sets up sortable list in the column sort order page.\n     *\n     */\n    setupSortableLists = () => {\n        new SortableList(\n            '.category_list',\n            {\n                moveHandlerSelector: '.list_item [data-drag-type=move]',\n            }\n        );\n        $('.list_item').on(SortableList.EVENTS.DROP, (evt) => {\n            evt.stopPropagation();\n            const categoryListElements = $('.list_item').parent();\n            // Get moved list item href URL.\n            const href = evt.currentTarget.getElementsByTagName('a')[0].href;\n            // Get query string for that URL.\n            const queryString = href.substr(href.search('\\\\?'));\n            const params = new URLSearchParams(queryString);\n            const cat = params.get('cat');\n            // Get old context and category id.\n            const oldContextId = cat.substr(cat.search(',') + 1);\n            const oldCat = cat.substr(0, cat.search(','));\n            // Remove proxy created by sortable list.\n            $('li.list_item[style]').remove();\n            const newOrder = this.getNewOrder(categoryListElements, oldContextId, oldCat);\n            // Call external function.\n            const newCatOrder = JSON.stringify(newOrder[0]);\n            const destination = newOrder[1].split(',');\n            const origin = newOrder[2].split(',');\n            const destinationContext = destination[1];\n            const originContext = origin[1];\n            const originCategory = origin[0];\n\n            this.setCatOrder(newCatOrder, originCategory, destinationContext, originContext)\n            .then(() => location.reload())\n            .catch(() => location.reload());\n        });\n    };\n\n    /**\n     * Call external function update_category_order - inserts the updated column in the question_categories table.\n     *\n     * @param {string} updatedCategories String containing new sortorder.\n     * @returns {Promise}\n     */\n    setCatOrder = (newCatOrder, originCategory, destinationContext, originContext) => {\n        const promise = new Promise((resolve, reject) => {\n            const response = Ajax.call([{\n                methodname: 'qbank_managecategories_update_category_order',\n                args: {\n                    neworder: newCatOrder,\n                    origincategory: originCategory,\n                    destinationcontext: destinationContext,\n                    origincontext: originContext\n                },\n                fail: Notification.exception\n            }]);\n            response[0].then((resp) => {\n                if (JSON.parse(resp) === true) {\n                    resolve();\n                } else {\n                    reject();\n                }\n            });\n        });\n        return promise;\n    };\n\n    /**\n     * Retrieving the order on EVENT.DROP, also gets new parameter.\n     *\n     * @param {JQuery<HTMLElement>} categoryListElements List of HTML element to parse.\n     * @param {int} oldContextId Old context id to change.\n     * @param {int} oldCat Old category.\n     * @returns {array}\n     */\n    getNewOrder = (categoryListElements, oldContextId, oldCat) => {\n        const oldCtxCat = oldCat + ',' + oldContextId;\n        const newCatOrder = [];\n        let destinationCtx = [];\n        for (let i = 0; i < categoryListElements.length; i++) {\n            const listItems = categoryListElements[i].querySelectorAll('li.list_item');\n            const listOrder = [];\n            for (let j = 0; j < listItems.length; j++) {\n                // Get href parameters.\n                const href = listItems[j].getElementsByTagName('a')[0].href;\n                const queryString = href.substr(href.search('\\\\?'));\n                const params = new URLSearchParams(queryString);\n                // Parameters.\n                const cat = params.get('cat');\n                const contextId = cat.substr(cat.search(',') + 1);\n                cat = cat.substr(0, cat.search(','));\n                listOrder[j] = cat + ',' + contextId;\n                if (listOrder[j] === oldCtxCat) {\n                    destinationCtx.push(listOrder);\n                }\n            }\n            // New category order.\n            newCatOrder[i] = listOrder;\n        }\n        destinationCtx = destinationCtx[0];\n        destinationCtx = destinationCtx.filter((ctxId) => ctxId !== oldCtxCat);\n        return [newCatOrder, destinationCtx[0], oldCtxCat];\n    };\n}\n\n/**\n * Sets events listenner for checkbox ticking change.\n */\nconst setEventListenner = () => {\n    let checkbox = document.getElementsByName('qbshowdescr')[0];\n    let checkboxform = document.getElementById('qbshowdescr-form');\n    if (checkbox !== undefined) {\n        checkbox.addEventListener('click', (e) => {\n            e.preventDefault();\n            checkboxform.submit();\n        });\n    }\n};\n\nexport const init = () => {\n    setEventListenner();\n    const orderCat = new OrderCategories();\n    orderCat.setupSortableLists();\n};\n"],"file":"order_categories.min.js"}