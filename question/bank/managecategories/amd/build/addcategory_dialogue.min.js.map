{"version":3,"sources":["../src/addcategory_dialogue.js"],"names":["displayModal","selector","contextid","trigger","document","querySelector","ModalFactory","create","type","types","SAVE_CANCEL","title","Str","get_string","body","getBody","large","done","modal","addEventListener","show","setSaveButtonText","root","getRoot","on","ModalEvents","hidden","setBody","shown","append","save","e","submitForm","submitFormAjax","then","hide","location","reload","catch","error","htmlBody","Fragment","loadFragment","preventDefault","changeEvent","createEvent","initEvent","find","each","index","element","dispatchEvent","invalid","length","first","focus","formData","serialize","Promise","resolve","Ajax","call","methodname","args","jsonformdata","JSON","stringify","fail","Notification","exception","submit","initModal","checkboxParam","CheckboxParam","setEventListenner","orderCat","OrderCategories","setupSortableLists"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module handling creation of Modal form.\n *\n * @package    qbank_managecategories\n * @copyright  2021 Catalyst IT Australia Pty Ltd\n * @author     Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n */\n\nimport * as Str from 'core/str';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Fragment from 'core/fragment';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport CheckboxParam from 'qbank_managecategories/checkbox_param';\nimport OrderCategories from 'qbank_managecategories/order_categories';\n\n/**\n * Function handling display of moodle form.\n *\n * @param {string} selector Selector to trigger form display on.\n * @param {int} contextid Context id for fragment.\n */\nconst displayModal = (selector, contextid) => {\n    const trigger = document.querySelector(selector);\n    ModalFactory.create({\n      type: ModalFactory.types.SAVE_CANCEL,\n      title: Str.get_string('addcategory', 'question'),\n      body: getBody(contextid),\n      large: true,\n    })\n    .done((modal) => {\n      trigger.addEventListener('click', () => {\n        modal.show();\n      });\n      modal.setSaveButtonText(Str.get_string('addcategory', 'question'));\n      const root = modal.getRoot();\n      root.on(ModalEvents.hidden, () => {\n        modal.setBody(getBody(contextid));\n      });\n      root.on(ModalEvents.shown, () => {\n        root.append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n      });\n      root.on(ModalEvents.save, (e) =>{\n        submitForm(modal, e);\n      });\n      root.on('submit', 'form', (e) => {\n        submitFormAjax(modal, e)\n        .then(() => {\n          modal.hide();\n          location.reload();\n        })\n        .catch((error) => error);\n      });\n    });\n};\n\n/**\n * Get body for moodle form from fragment new_category_form.\n *\n * @param {int} contextid Context id for fragment.\n * @returns {Promise}\n */\nconst getBody = (contextid) => {\n    const params = {};\n    const htmlBody = Fragment.loadFragment('qbank_managecategories', 'new_category_form', contextid, params);\n    return htmlBody;\n};\n\n/**\n * Call external function add_category_form - inserts the newly added category in the question_categories table.\n *\n * @param {Object} modal Object representing form data.\n * @returns {Mixed}\n */\nconst submitFormAjax = (modal, e) => {\n  e.preventDefault();\n  const changeEvent = document.createEvent('HTMLEvents');\n  changeEvent.initEvent('change', true, true);\n\n  modal.getRoot().find(':input').each((index, element) => {\n    element.dispatchEvent(changeEvent);\n  });\n\n  const invalid = modal.getRoot().find('[aria-invalid=\"true\"]');\n  const error = modal.getRoot().find('.error');\n\n  // If we found invalid fields, focus on the first one and do not submit via ajax.\n  if (invalid.length || error.length) {\n      invalid.first().focus();\n      return;\n  }\n\n  const formData =  modal.getRoot().find('form').serialize();\n  return Promise.resolve(\n    Ajax.call([{\n    methodname: 'qbank_managecategories_submit_add_category_form',\n    args: {jsonformdata: JSON.stringify(formData)},\n    fail: Notification.exception\n  }]));\n};\n\n/**\n * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n *\n * @param {Object} modal representing form data.\n * @param {Event} e Form submission event.\n */\nconst submitForm = (modal, e) => {\n  e.preventDefault();\n  modal.getRoot().find('form').submit();\n};\n\nexport const initModal = (selector, contextid) => {\n  displayModal(selector, contextid);\n  const checkboxParam = new CheckboxParam();\n  checkboxParam.setEventListenner();\n  const orderCat = new OrderCategories();\n  orderCat.setupSortableLists();\n};\n"],"file":"addcategory_dialogue.min.js"}