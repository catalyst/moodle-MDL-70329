{"version":3,"sources":["../src/usage.js"],"names":["getFragment","args","contextId","Fragment","loadFragment","usageEvent","questionId","questionid","ModalFactory","create","type","types","CANCEL","title","Str","get_string","body","large","then","modal","show","getRoot","on","e","preventDefault","attr","target","getAttribute","querystring","setBody","fail","Notification","exception","init","document","querySelector","addEventListener","dataset","includes","contextid"],"mappings":"+eAwBA,OACA,OACA,OACA,O,4lBAUMA,CAAAA,CAAW,CAAG,SAACC,CAAD,CAAOC,CAAP,CAAqB,CACrC,MAAOC,WAASC,YAAT,CAAsB,aAAtB,CAAqC,gBAArC,CAAuDF,CAAvD,CAAkED,CAAlE,CACV,C,CASKI,CAAU,CAAG,SAACC,CAAD,CAAaJ,CAAb,CAA2B,CAC1C,GAAID,CAAAA,CAAI,CAAG,CACPM,UAAU,CAAED,CADL,CAAX,CAGAE,UAAaC,MAAb,CAAoB,CAChBC,IAAI,CAAEF,UAAaG,KAAb,CAAmBC,MADT,CAEhBC,KAAK,CAAEC,CAAG,CAACC,UAAJ,CAAe,aAAf,CAA8B,aAA9B,CAFS,CAGhBC,IAAI,CAAEhB,CAAW,CAACC,CAAD,CAAOC,CAAP,CAHD,CAIhBe,KAAK,GAJW,CAApB,EAKGC,IALH,CAKQ,SAACC,CAAD,CAAW,CACfA,CAAK,CAACC,IAAN,GACAD,CAAK,CAACE,OAAN,GAAgBC,EAAhB,CAAmB,OAAnB,CAA4B,mBAA5B,CAAiD,SAASC,CAAT,CAAY,CACzDA,CAAC,CAACC,cAAF,GACA,GAAIC,CAAAA,CAAI,CAAGF,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,MAAtB,CAAX,CACA,GAAa,GAAT,GAAAF,CAAJ,CAAkB,CACdxB,CAAI,CAAC2B,WAAL,CAAmBH,CAAnB,CACAN,CAAK,CAACU,OAAN,CAAc7B,CAAW,CAACC,CAAD,CAAOC,CAAP,CAAzB,CACH,CACJ,CAPD,EAQA,MAAOiB,CAAAA,CACV,CAhBD,EAgBGW,IAhBH,CAgBQC,UAAaC,SAhBrB,CAiBH,C,QAOmB,QAAPC,CAAAA,IAAO,EAAM,CACtB,GAAIP,CAAAA,CAAM,CAAGQ,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAAb,CACAT,CAAM,CAACU,gBAAP,CAAwB,OAAxB,CAAiC,SAACb,CAAD,CAAO,CACpC,GAAIA,CAAC,CAACG,MAAF,CAASW,OAAT,CAAiBX,MAAjB,EAA2BH,CAAC,CAACG,MAAF,CAASW,OAAT,CAAiBX,MAAjB,CAAwBY,QAAxB,CAAiC,sBAAjC,CAA/B,CAAyF,IACjFhC,CAAAA,CAAU,CAAGiB,CAAC,CAACG,MAAF,CAASW,OAAT,CAAiB9B,UADmD,CAEjFL,CAAS,CAAGqB,CAAC,CAACG,MAAF,CAASW,OAAT,CAAiBE,SAFoD,CAIrFlC,CAAU,CAACC,CAAD,CAAaJ,CAAb,CACb,CACJ,CAPD,CAQH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Usage column selector js.\n *\n * @module     qbank_usage/usage\n * @copyright  2021 Catalyst IT Australia Pty Ltd\n * @author     Safat Shahin <safatshahin@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Fragment from 'core/fragment';\nimport * as Str from 'core/str';\nimport ModalFactory from 'core/modal_factory';\nimport Notification from 'core/notification';\n\n/**\n * Get the fragment.\n *\n * @method getFragment\n * @param {{questioned: int}} args\n * @param {int} contextId\n * @return {string}\n */\nconst getFragment = (args, contextId) => {\n    return Fragment.loadFragment('qbank_usage', 'question_usage', contextId, args);\n};\n\n/**\n * Event listeners for the module.\n *\n * @method clickEvent\n * @param {int} questionId\n * @param {int} contextId\n */\nconst usageEvent = (questionId, contextId) => {\n    let args = {\n        questionid: questionId\n    };\n    ModalFactory.create({\n        type: ModalFactory.types.CANCEL,\n        title: Str.get_string('usageheader', 'qbank_usage'),\n        body: getFragment(args, contextId),\n        large: true,\n    }).then((modal) => {\n        modal.show();\n        modal.getRoot().on('click', 'a[href].page-link', function(e) {\n            e.preventDefault();\n            let attr = e.target.getAttribute(\"href\");\n            if (attr !== '#') {\n                args.querystring = attr;\n                modal.setBody(getFragment(args, contextId));\n            }\n        });\n        return modal;\n    }).fail(Notification.exception);\n};\n\n/**\n * Entrypoint of the js.\n *\n * @method init\n */\nexport const init = () => {\n    let target = document.querySelector('#questionscontainer');\n    target.addEventListener('click', (e) => {\n        if (e.target.dataset.target && e.target.dataset.target.includes('questionusagepreview')) {\n            let questionId = e.target.dataset.questionid;\n            let contextId = e.target.dataset.contextid;\n            // Call for the event listener to listed for clicks in any usage count row.\n            usageEvent(questionId, contextId);\n        }\n    });\n};\n"],"file":"usage.min.js"}