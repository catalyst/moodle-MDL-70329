{"version":3,"file":"usage.min.js","sources":["../src/usage.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Usage column selector js.\n *\n * @module     qbank_usage/usage\n * @copyright  2021 Catalyst IT Australia Pty Ltd\n * @author     Safat Shahin <safatshahin@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Fragment from 'core/fragment';\nimport * as Str from 'core/str';\nimport ModalFactory from 'core/modal_factory';\nimport Notification from 'core/notification';\n\n/**\n * Get the fragment.\n *\n * @method getFragment\n * @param {{questioned: int}} args\n * @param {int} contextId\n * @return {string}\n */\nconst getFragment = (args, contextId) => {\n    return Fragment.loadFragment('qbank_usage', 'question_usage', contextId, args);\n};\n\n/**\n * Event listeners for the module.\n *\n * @method clickEvent\n * @param {int} questionId\n * @param {int} contextId\n */\nconst usageEvent = (questionId, contextId) => {\n    let args = {\n        questionid: questionId\n    };\n    ModalFactory.create({\n        type: ModalFactory.types.CANCEL,\n        title: Str.get_string('usageheader', 'qbank_usage'),\n        body: getFragment(args, contextId),\n        large: true,\n    }).then((modal) => {\n        modal.show();\n        modal.getRoot().on('click', 'a[href].page-link', function(e) {\n            e.preventDefault();\n            let attr = e.target.getAttribute(\"href\");\n            if (attr !== '#') {\n                args.querystring = attr;\n                modal.setBody(getFragment(args, contextId));\n            }\n        });\n        return modal;\n    }).fail(Notification.exception);\n};\n\n/**\n * Entrypoint of the js.\n *\n * @method init\n */\nexport const init = () => {\n    let target = document.querySelector('#questionscontainer');\n    if (target !== null) {\n        target.addEventListener('click', (e) => {\n            if (e.target.dataset.target && e.target.dataset.target.includes('questionusagepreview')) {\n                let questionId = e.target.dataset.questionid;\n                let contextId = e.target.dataset.contextid;\n                // Call for the event listener to listed for clicks in any usage count row.\n                usageEvent(questionId, contextId);\n            }\n        });\n    }\n};\n"],"names":["getFragment","args","contextId","Fragment","loadFragment","target","document","querySelector","addEventListener","e","dataset","includes","questionId","questionid","create","type","ModalFactory","types","CANCEL","title","Str","get_string","body","large","then","modal","show","getRoot","on","preventDefault","attr","getAttribute","querystring","setBody","fail","Notification","exception","usageEvent","contextid"],"mappings":";;;;;;;;o4BAqCMA,YAAc,CAACC,KAAMC,YAChBC,kBAASC,aAAa,cAAe,iBAAkBF,UAAWD,oBAsCzD,SACZI,OAASC,SAASC,cAAc,uBACrB,OAAXF,QACAA,OAAOG,iBAAiB,SAAUC,OAC1BA,EAAEJ,OAAOK,QAAQL,QAAUI,EAAEJ,OAAOK,QAAQL,OAAOM,SAAS,wBAAyB,CAhClF,EAACC,WAAYV,iBACxBD,KAAO,CACPY,WAAYD,mCAEHE,OAAO,CAChBC,KAAMC,uBAAaC,MAAMC,OACzBC,MAAOC,IAAIC,WAAW,cAAe,eACrCC,KAAMtB,YAAYC,KAAMC,WACxBqB,OAAO,IACRC,MAAMC,QACLA,MAAMC,OACND,MAAME,UAAUC,GAAG,QAAS,qBAAqB,SAASnB,GACtDA,EAAEoB,qBACEC,KAAOrB,EAAEJ,OAAO0B,aAAa,QACpB,MAATD,OACA7B,KAAK+B,YAAcF,KACnBL,MAAMQ,QAAQjC,YAAYC,KAAMC,gBAGjCuB,SACRS,KAAKC,sBAAaC,YAgBTC,CAHiB5B,EAAEJ,OAAOK,QAAQG,WAClBJ,EAAEJ,OAAOK,QAAQ4B"}