{"version":3,"sources":["../src/filter.js"],"names":["init","filterRegionId","defaultcourseid","defaultcategoryid","perpage","recurse","showhidden","qbshowtext","contextId","component","callback","extraparams","filterSet","document","querySelector","wsfilter","filters","filteroptions","filterverb","displayoptions","showtext","sortdata","sortby","sortorder","SELECTORS","QUESTION_CONTAINER_ID","SORT_LINK","PAGINATION_LINK","coreFilter","CoreFilter","pendingPromise","applyFilter","requestQuestions","filter","ajax","call","methodname","args","filterdata","parseInt","dataset","Object","entries","key","value","jointype","rangetype","values","toString","push","keys","length","updateUrlParams","then","response","element","getElementById","firstChild","removeChild","warnings","warningcode","Notification","addNotification","message","type","renderQuestiondata","filtercondition","questionscontainer","questionhtml","jsfooter","Templates","replaceNodeContents","resolve","fail","exception","console","log","contextid","url","URL","location","href","query","objectToQuery","searchParams","set","history","pushState","cleanUrlParams","queryString","search","urlParams","URLSearchParams","has","cleanedUrl","replace","get","map","encodeURIComponent","join","queryToObject","object","params","forEach","param","isNaN","includes","split","addEventListener","e","sortableLink","target","closest","paginationLink","clearLink","Selectors","filterset","actions","resetFilters","preventDefault","oldsort","page","updateTableFromFilter","attr","getAttribute","urlLoadedFilters","loadUrlParams","region","urlFilter","addFilter"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Question bank filter managemnet.\n *\n * @module     core_question/filter\n * @copyright  2021 Tomo Tsuyuki <tomotsuyuki@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ajax from 'core/ajax';\nimport CoreFilter from 'core/filter';\nimport Notification from 'core/notification';\nimport Selectors from 'core/local/filter/selectors';\nimport Templates from 'core/templates';\n\n/**\n * Initialise the question bank filter on the element with the given id.\n *\n * @param {String} filterRegionId id of the filter region\n * @param {String} defaultcourseid default course id\n * @param {String} defaultcategoryid default category id\n * @param {int} perpage number of question per page\n * @param {boolean} recurse if loading sub categories\n * @param {boolean} showhidden if loading hidden question\n * @param {boolean} qbshowtext if loading question text\n * @param {int} contextId id of the context\n * @param {string} component name of the component for fragment\n * @param {string} callback name of the callback for the fragment\n * @param {string} extraparams json encoded extra params for the extended apis\n */\nexport const init = (filterRegionId, defaultcourseid, defaultcategoryid,\n                     perpage, recurse, showhidden, qbshowtext,\n                     contextId, component, callback, extraparams) => {\n\n    const filterSet = document.querySelector(`#${filterRegionId}`);\n\n    // Default filter params for WS function.\n    let wsfilter = {\n        // Default value filterset::JOINTYPE_DEFAULT.\n        filters: [],\n        filteroptions: {\n            filterverb: 2,\n            recurse: recurse,\n            showhidden: showhidden,\n        },\n        displayoptions: {\n            perpage: perpage,\n            showtext: qbshowtext,\n        },\n        sortdata: [\n            {\n                sortby: 'qbank_viewquestiontype\\\\question_type_column',\n                sortorder: 4,\n            }\n        ],\n        defaultcourseid: defaultcourseid,\n        defaultcategoryid: defaultcategoryid,\n    };\n\n    // HTML <div> ID of question container.\n    const SELECTORS = {\n        QUESTION_CONTAINER_ID: '#questionscontainer',\n        SORT_LINK: '#questionscontainer div.sorters a',\n        PAGINATION_LINK: '#questionscontainer a[href].page-link',\n    };\n\n    // Init function with apply callback.\n    const coreFilter = new CoreFilter(filterSet, function(filters, pendingPromise) {\n        applyFilter(filters, pendingPromise);\n    });\n    coreFilter.init();\n\n    /**\n     * Ajax call to retrieve question via ws functions\n     *\n     * @param {Object} filter filter object\n     * @returns {*}\n     */\n    const requestQuestions = filter => {\n        const request = {methodname: 'core_question_filter', args: filter};\n        return ajax.call([request])[0];\n    };\n\n    /**\n     * Retrieve table data.\n     *\n     * @param {Object} filterdata data\n     * @param {Promise} pendingPromise pending promise\n     */\n    const applyFilter = (filterdata, pendingPromise) => {\n        // Getting filter data.\n        // Otherwise, the ws function should retrieves question based on default courseid and cateogryid.\n        if (filterdata) {\n            // Main join types.\n            wsfilter.filteroptions.filterverb = parseInt(filterSet.dataset.filterverb, 10);\n\n            // Clean old filter\n            wsfilter.filters = [];\n\n            // Retrieve fitter info.\n            for (const [key, value] of Object.entries(filterdata)) {\n                let filter = {\n                    'filtertype': key,\n                    'jointype': value.jointype,\n                    'rangetype': value.rangetype,\n                    'values': value.values.toString()\n                };\n                wsfilter.filters.push(filter);\n            }\n            if (Object.keys(filterdata).length !== 0) {\n                updateUrlParams(filterdata);\n            }\n        }\n        // Load questions for first page.\n        requestQuestions(wsfilter)\n            .then((response) => {\n                // Cleans any notifications if not needed.\n                let element = document.getElementById('user-notifications');\n                while (element.firstChild) {\n                    element.removeChild(element.firstChild);\n                }\n                if (response.warnings[0] !== undefined) {\n                    if (response.warnings[0].warningcode === 'nocategoryconditionspecified') {\n                        Notification.addNotification({\n                            message: response.warnings[0].message,\n                            type: 'info'\n                          });\n                    }\n                }\n                return renderQuestiondata(response.filtercondition);\n            })\n            // Render questions for first page and pagination.\n            .then((response) => {\n                const questionscontainer = document.querySelector(SELECTORS.QUESTION_CONTAINER_ID);\n                if (response.questionhtml === undefined) {\n                    response.questionhtml = '';\n                }\n                if (response.jsfooter === undefined) {\n                    response.jsfooter = '';\n                }\n                Templates.replaceNodeContents(questionscontainer, response.questionhtml, response.jsfooter);\n                // Resolve filter promise.\n                if (pendingPromise) {\n                    pendingPromise.resolve();\n                }\n            })\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Render question data using the fragment.\n     * @param {object} filtercondition\n     * @return {*}\n     */\n    const renderQuestiondata = (filtercondition) => {\n        // eslint-disable-next-line no-console\n        console.log(extraparams);\n        const viewData = {\n            component: component,\n            callback: callback,\n            filtercondition: filtercondition,\n            contextid: contextId,\n            extraparams: extraparams,\n        };\n        const request = {methodname: 'core_question_view', args: viewData};\n        return ajax.call([request])[0];\n    };\n\n    /**\n     * Update URL Param based upon the current filter.\n     *\n     * @param {Object} filters Active filters.\n     */\n    const updateUrlParams = (filters) => {\n        const url = new URL(location.href);\n        const query = objectToQuery(filters);\n        url.searchParams.set('filter', query);\n        history.pushState(filters, '', url);\n    };\n\n    /**\n     * Cleans URL parameters.\n     *\n     */\n    const cleanUrlParams = () => {\n        const queryString = location.search;\n        const urlParams = new URLSearchParams(queryString);\n        if (urlParams.has('cmid')) {\n            const cleanedUrl = new URL(location.href.replace(location.search, ''));\n            cleanedUrl.searchParams.set('cmid', urlParams.get('cmid'));\n            history.pushState({}, '', cleanedUrl);\n        }\n\n        if (urlParams.has('courseid')) {\n            const cleanedUrl = new URL(location.href.replace(location.search, ''));\n            cleanedUrl.searchParams.set('courseid', urlParams.get('courseid'));\n            history.pushState({}, '', cleanedUrl);\n        }\n    };\n\n    /**\n     * Convert a nested object into query parameters.\n     *\n     * @param {Object} filters Active filters.\n     * @return {String}\n     */\n    const objectToQuery = (filters) => {\n        return Object.keys(filters).map(key => {\n            let value = filters[key];\n            if (value !== null && typeof value === 'object') {\n                value = objectToQuery(value);\n            }\n            return `${key}=${encodeURIComponent(`${value}`.replace(/\\s/g, '_'))}`;\n        }).join('&');\n    };\n\n    /**\n     * Load URL parameter.\n     *\n     * @return {Object} filters\n     */\n    const loadUrlParams = () => {\n        const queryString = location.search;\n        const urlParams = new URLSearchParams(queryString);\n        if (urlParams.has('filter')) {\n            const filters = queryToObject(urlParams.get('filter'));\n            return filters;\n        }\n        return {};\n    };\n\n    /**\n     * Convert query parameters into object.\n     *\n     * @param {string} query Query representing filter object.\n     * @return {object}\n     */\n    const queryToObject = (query) => {\n        const object = {};\n        const params = new URLSearchParams(query);\n        const entries = params.entries();\n        entries.forEach((value) => {\n            const param = value[0];\n            object[param] = !isNaN(params.get(param)) ? parseInt(params.get(param)) : params.get(param);\n            if (isNaN(object[param]) && object[param].includes('&')) {\n                object[param] = queryToObject(object[param]);\n            }\n            if (param == 'values') {\n                if (typeof object[param] == 'string' && object[param].includes('=')) {\n                    object[param] = [object[param].split('=')[1]];\n                } else {\n                    object[param] = Object.values(object[param]);\n                }\n            }\n        });\n        return object;\n    };\n\n    // Add listeners for the sorting actions.\n    document.addEventListener('click', e => {\n        const sortableLink = e.target.closest(SELECTORS.SORT_LINK);\n        const paginationLink = e.target.closest(SELECTORS.PAGINATION_LINK);\n        const clearLink = e.target.closest(Selectors.filterset.actions.resetFilters);\n        if (sortableLink) {\n            e.preventDefault();\n            let oldsort = wsfilter.sortdata;\n            wsfilter.sortdata = [];\n            let sortdata = {\n                sortby: sortableLink.dataset.sortby,\n                sortorder: sortableLink.dataset.sortorder\n            };\n            wsfilter.sortdata.push(sortdata);\n            oldsort.forEach(value => {\n                if (value.sortby !== sortableLink.dataset.sortby) {\n                    wsfilter.sortdata.push(value);\n                }\n            });\n            wsfilter.displayoptions.page = 0;\n            coreFilter.updateTableFromFilter();\n        }\n        if (paginationLink) {\n            e.preventDefault();\n            let attr = e.target.getAttribute(\"href\");\n            if (attr !== '#') {\n                const urlParams = new URLSearchParams(attr);\n                wsfilter.displayoptions.page = urlParams.get('qpage');\n                coreFilter.updateTableFromFilter();\n            }\n        }\n        if (clearLink) {\n            cleanUrlParams();\n        }\n    });\n\n    // Run apply filter at page load.\n    const urlLoadedFilters = loadUrlParams();\n    const filter = filterSet.querySelector(Selectors.filter.region);\n    if (Object.entries(urlLoadedFilters).length !== 0) {\n        for (const urlFilter in urlLoadedFilters) {\n            if (urlFilter !== 'courseid') {\n                coreFilter.addFilter(filter,\n                                     urlFilter,\n                                     urlLoadedFilters[urlFilter].values,\n                                     urlLoadedFilters[urlFilter].jointype,\n                                     urlLoadedFilters[urlFilter].rangetype);\n            }\n        }\n    } else {\n        coreFilter.addFilter(filter, 'category', [defaultcategoryid]);\n    }\n    applyFilter(urlLoadedFilters);\n};\n"],"file":"filter.min.js"}