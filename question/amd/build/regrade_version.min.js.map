{"version":3,"sources":["../src/regrade_version.js"],"names":["updateAttempt","questionId","questionVersion","attemptId","versionToRegrade","Ajax","call","methodname","args","questionid","questionversion","attemptid","versiontoregrade","fail","Notification","exception","init","attemptForm","document","getElementById","addEventListener","e","target","className","includes","dataset","value"],"mappings":"gLAwBA,OACA,O,sDAEMA,CAAAA,CAAa,CAAG,SAACC,CAAD,CAAaC,CAAb,CAA8BC,CAA9B,CAAyCC,CAAzC,CAA8D,CAChF,MAAOC,WAAKC,IAAL,CAAU,CAAC,CACdC,UAAU,CAAE,sCADE,CAEdC,IAAI,CAAE,CACFC,UAAU,CAAER,CADV,CAEFS,eAAe,CAAER,CAFf,CAGFS,SAAS,CAAER,CAHT,CAIFS,gBAAgB,CAAER,CAJhB,CAFQ,CAQdS,IAAI,CAAEC,UAAaC,SARL,CAAD,CAAV,EASH,CATG,CAUV,C,QAEmB,QAAPC,CAAAA,IAAO,EAAM,CACtB,GAAMC,CAAAA,CAAW,CAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAApB,CACA,GAAIF,CAAJ,CAAiB,CACbA,CAAW,CAACG,gBAAZ,CAA6B,QAA7B,CAAuC,SAACC,CAAD,CAAO,CAC1C,GAAIA,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,iBAA5B,CAAJ,CAAoD,IAC1CvB,CAAAA,CAAU,CAAGoB,CAAC,CAACC,MAAF,CAASG,OAAT,CAAiBhB,UADY,CAE1CP,CAAe,CAAGmB,CAAC,CAACC,MAAF,CAASG,OAAT,CAAiBf,eAFO,CAG1CP,CAAS,CAAGkB,CAAC,CAACC,MAAF,CAASG,OAAT,CAAiBd,SAHa,CAI1CP,CAAgB,CAAGiB,CAAC,CAACC,MAAF,CAASI,KAJc,CAKhD1B,CAAa,CAACC,CAAD,CAAaC,CAAb,CAA8BC,CAA9B,CAAyCC,CAAzC,CAChB,CACJ,CARD,CASH,CACJ,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module updating question attempt when regrading question.\n *\n * @module     core_question/regrade_version\n * @copyright  2021 Catalyst IT Australia Pty Ltd\n * @author     Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n */\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\nconst updateAttempt = (questionId, questionVersion, attemptId, versionToRegrade) => {\n    return Ajax.call([{\n        methodname: 'core_question_update_attempt_regrade',\n        args: {\n            questionid: questionId,\n            questionversion: questionVersion,\n            attemptid: attemptId,\n            versiontoregrade: versionToRegrade,\n        },\n        fail: Notification.exception\n    }])[0];\n};\n\nexport const init = () => {\n    const attemptForm = document.getElementById('attemptsform');\n    if (attemptForm) {\n        attemptForm.addEventListener('change', (e) => {\n            if (e.target.className.includes('version-regrade')) {\n                const questionId = e.target.dataset.questionid;\n                const questionVersion = e.target.dataset.questionversion;\n                const attemptId = e.target.dataset.attemptid;\n                const versionToRegrade = e.target.value;\n                updateAttempt(questionId, questionVersion, attemptId, versionToRegrade);\n            }\n        });\n    }\n};"],"file":"regrade_version.min.js"}