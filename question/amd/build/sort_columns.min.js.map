{"version":3,"sources":["../src/sort_columns.js"],"names":["setupSortableLists","SortableList","moveHandlerSelector","on","EVENTS","DROP","columnorder","getColumnOrder","setOrder","JSON","stringify","removeClass","DRAGSTART","event","currentTarget","addClass","updatedcolumn","Ajax","call","methodname","args","columns","fail","Notification","exception","findDuplicates","columnsDuplicate","filter","item","index","indexOf","updated","document","querySelectorAll","Array","length","i","innerText","trim","pop","join","init"],"mappings":"+MAwBA,OACA,OACA,OACA,O,uyBAKMA,CAAAA,CAAkB,CAAG,UAAM,CAC7B,GAAIC,UAAJ,CACI,OADJ,CAEI,CACIC,mBAAmB,CAAE,OADzB,CAFJ,EAOA,cAAO,OAAP,EAAgBC,EAAhB,CAAmBF,UAAaG,MAAb,CAAoBC,IAAvC,CAA6C,UAAM,CAC/C,GAAIC,CAAAA,CAAW,CAAGC,CAAc,EAAhC,CACAC,CAAQ,CAACC,IAAI,CAACC,SAAL,CAAeJ,CAAf,CAAD,CAAR,CACA,cAAO,OAAP,EAAgBK,WAAhB,CAA4B,QAA5B,CACH,CAJD,EAMA,cAAO,OAAP,EAAgBR,EAAhB,CAAmBF,UAAaG,MAAb,CAAoBQ,SAAvC,CAAkD,SAACC,CAAD,CAAW,CACzD,cAAOA,CAAK,CAACC,aAAb,EAA4BC,QAA5B,CAAqC,QAArC,CACH,CAFD,CAGH,C,CAOKP,CAAQ,CAAG,SAACQ,CAAD,CAAmB,CAChCC,UAAKC,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,oCADL,CAEPC,IAAI,CAAE,CAACC,OAAO,CAAEL,CAAV,CAFC,CAGPM,IAAI,CAAEC,UAAaC,SAHZ,CAAD,CAAV,CAKH,C,CAQKC,CAAc,CAAG,SAACC,CAAD,CAAsB,CACzC,MAAOA,CAAAA,CAAgB,CAACC,MAAjB,CAAwB,SAACC,CAAD,CAAOC,CAAP,QAAiBH,CAAAA,CAAgB,CAACI,OAAjB,CAAyBF,CAAzB,IAAmCC,CAApD,CAAxB,CACV,C,CAOKtB,CAAc,CAAG,UAAM,CAGzB,OAFIwB,CAAAA,CAAO,GAAOC,QAAQ,CAACC,gBAAT,CAA0B,cAA1B,CAAP,CAEX,CADIZ,CAAO,CAAOa,KAAP,CAAaH,CAAO,CAACI,MAArB,CACX,CAASC,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,CAAO,CAACI,MAA5B,CAAoCC,CAAC,EAArC,CAAyC,CACrCf,CAAO,CAACe,CAAD,CAAP,CAAaL,CAAO,CAACK,CAAD,CAAP,CAAWC,SAAX,CAAqBC,IAArB,EAChB,CACD,GAAuC,CAAnC,GAAAb,CAAc,CAACJ,CAAD,CAAd,CAAwBc,MAA5B,CAA0C,CACtCd,CAAO,CAACkB,GAAR,EACH,CACD,MAAOlB,CAAAA,CAAO,CAACmB,IAAR,EACV,C,QAEmB,QAAPC,CAAAA,IAAO,EAAM,CACtBzC,CAAkB,EACrB,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @copyright  2021 Catalyst IT Australia Pty Ltd\n * @author     Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n*/\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport SortableList from 'core/sortable_list';\nimport jQuery from 'jquery';\n\n/**\n * Sets up sortable list in the column sort order page.\n */\nconst setupSortableLists = () => {\n    new SortableList(\n        '.list',\n        {\n            moveHandlerSelector: '.item',\n        }\n    );\n\n    jQuery('.item').on(SortableList.EVENTS.DROP, () => {\n        let columnorder = getColumnOrder();\n        setOrder(JSON.stringify(columnorder));\n        jQuery('.item').removeClass('active');\n    });\n\n    jQuery('.item').on(SortableList.EVENTS.DRAGSTART, (event) => {\n        jQuery(event.currentTarget).addClass('active');\n    });\n};\n\n/**\n * Call external function set_order - inserts the updated column in the config_plugins table.\n *\n * @param {String} updatedcolumn String that contains column order.\n */\nconst setOrder = (updatedcolumn) => {\n    Ajax.call([{\n        methodname: 'core_question_set_columnbank_order',\n        args: {columns: updatedcolumn},\n        fail: Notification.exception\n    }]);\n};\n\n/**\n * Gets an array duplicate.\n *\n * @param {Array} columnsDuplicate Array to search duplicates for.\n * @returns {Object}\n */\nconst findDuplicates = (columnsDuplicate) => {\n    return columnsDuplicate.filter((item, index) => columnsDuplicate.indexOf(item) !== index);\n};\n\n/**\n * Gets the newly reordered columns to display in the question bank view.\n *\n * @returns {String}\n */\nconst getColumnOrder = () => {\n    let updated = [...document.querySelectorAll('.retrievable')];\n    let columns = new Array(updated.length);\n    for (let i = 0; i < updated.length; i++) {\n        columns[i] = updated[i].innerText.trim();\n    }\n    if (findDuplicates(columns).length !== 0) {\n        columns.pop();\n    }\n    return columns.join();\n};\n\nexport const init = () => {\n    setupSortableLists();\n};\n"],"file":"sort_columns.min.js"}